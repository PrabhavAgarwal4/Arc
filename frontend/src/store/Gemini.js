import { create } from "zustand";
import axios from 'axios';
import toast from 'react-hot-toast'; // Import react-hot-toast for user feedback

// export const useGeminiStore = create((set, get) => ({
//     isGenPrompt: false, // Flag for loader to work correctly 
//     result: null, // Store the result generated by Gemini (initialized as null)

    // handleGenerate: async (prompt) => {
    //     set({ isGenPrompt: true }); // Set loading state

    //     try {
    //         const response = await axios.post(
    //             'http://localhost:3001/gemini/generate',
    //             { prompt },
    //             {
    //                 headers: {
    //                     'Content-Type': 'application/json',
    //                 },
    //             }
    //         );
    //         // Assuming the backend returns the result in a 'text' property within the response.data object.
    //         set({ result: response.data }); // Update state with the result from the backend
    //         toast.success("Gemini API call successful!"); // Provide user feedback
    //     } catch (error) {
    //         console.error('Gemini API call failed:', error);
    //         let errorMessage = "Gemini API call failed. Please try again.";

    //         if (error.response && error.response.data && error.response.data.error) {
    //             errorMessage = error.response.data.error; // Use backend error message if available
    //         } else if (error.message) {
    //             errorMessage = error.message; // Use axios error message
    //         }

    //         toast.error(errorMessage); // Display error to user
    //         set({ result: null }); // Clear previous result on error
    //     } finally {
    //         set({ isGenPrompt: false }); // Reset loading state
    //     }
    // },
    export const useGeminiStore = create((set, get) => ({
        isGenPrompt: false,
        result: null,
    
        handleGenerate: async (prompt) => {
            set({ isGenPrompt: true });
            try {
                const response = await axios.post(
                    'http://localhost:3001/gemini/generate',
                    { prompt },
                    {
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    }
                );
                if (response.status === 200) {
                    console.log("API Response Data:", response.data);
                    set({ result: response.data });
                    console.log("Gemini Store Result:", get().result); // Check state update
                    toast.success("Gemini API call successful!");
                } else {
                    console.error("Gemini API returned non-200 status:", response.status);
                    toast.error("Failed to generate a trip, please try again.");
                    set({result: null});
                }
    
            } catch (error) {
                console.error("Error calling Gemini API:", error);
                toast.error("Failed to generate a trip, please try again.");
                set({result: null});
            } finally {
                set({ isGenPrompt: false });
            }
        },
    })); 
// import React, { useState } from 'react';
// import { create } from "zustand";
// import { axiosInstance } from "../lib/axios.js";
// import axios from 'axios';

// export const useGeminiStore = create((set, get) => ({
//    isGenPrompt:true, //flag for generating prompt stage
//     result:[],  //store the result generated by Gemini 

//    handleGenerate :async (prompt) => {
//     try {
//     //   const token = localStorage.getItem('token'); // Retrieve the token //no need for this 

//       const response = await axios.post(
//         'http://localhost:3001/gemini/generate',
//         { prompt },
//         {
//           headers: {
//             Content-Type:'application/json', 
//           },
//         }
//       );

//        set({result:response.text()})
//   //now this result is fecthed in index.jsx file hwere we are calling handleGenerate fn by importing it from useGeminiStore
//     } catch (error) {
//       console.error('Gemini API call failed:', error);
//       // Handle errors
//     }finally{
//       set({isGenPrompt:false})
//     }
//   };

 
//   );
// }
